ui <- dashboardPage(
dashboardHeader(title = "UC Admissions"),
dashboardSidebar(disable = TRUE),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Campus",
choices = unique(cleanUC_admit$campus),
selected = "Davis"),
selectInput("y", "Select Category",
choices = unique(cleanUC_admit$category),
selected = "Applicants"),
selectInput("z", "Select Admit Ethnicity",
choices = unique(cleanUC_admit$ethnicity),
selected = "International")
), #close first box
box(title = "Yearly Trends", width = 9,
plotOutput("plot", width = "800px", height = "600px")
) #close second box
) #close row
) #close dashboard body
) #close ui
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
cleanUC_admit %>% mutate(academic_yr=as.factor(academic_yr)) %>%
filter(ethnicity != "All" & perc_fr != "NA") %>%
filter(campus == input$x) %>%
filter(category == input$y) %>%
filter(ethnicity == input$z) %>%
ggplot(aes_string(x="academic_yr", y="perc_fr")) +
geom_point(color="red") +
geom_path(group="keep") +
labs(x="Academic Year",
y="% Applicants, Admits, or Enrollees") +
theme(axis.title.x = element_text(size=10),
axis.title.y = element_text(size=10))
})
}
shinyApp(ui, server)
runApp('hw14 shiny app2.R')
View(UC_admit)
runApp('hw14 shiny app2.R')
names(UC_admit)
runApp('hw14 shiny app2.R')
runApp('hw14 shiny app1.R')
runApp('hw14 shiny app1.R')
runApp('hw14 shiny app2.R')
runApp('hw14 shiny app2.R')
runApp('hw14 shiny app2.R')
library(tidyverse)
library(shiny)
library(shinydashboard)
library("naniar")
library("janitor")
ui <- dashboardPage(
dashboardHeader(title = "UC Campus Admissions by Ethnicity 2010-2019"),
dashboardSidebar(disable=T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admit Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants")
), # close the first box
box(title = "UC Admissions", width = 8,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes(x=reorder(Ethnicity, FilteredCountFR), y=FilteredCountFR)) +
geom_col(color="black", fill="pink", alpha=0.75) +
theme_light(base_size = 18) +
theme(axis.text.x = element_text(angle = 50, hjust = 1))+
labs(x = "Ethnicity", y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
UC_admit <- UC_admit %>%
mutate(`Perc FR`=as.numeric(sub("%", "", `Perc FR`))) %>%
clean_names()
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions"),
dashboardSidebar(disable = TRUE),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Campus",
choices = unique(cleanUC_admit$campus),
selected = "Davis"),
selectInput("y", "Select Category",
choices = unique(cleanUC_admit$category),
selected = "Applicants"),
selectInput("z", "Select Admit Ethnicity",
choices = unique(cleanUC_admit$ethnicity),
selected = "International")
), #close the first box
box(title = "Yearly Trends", width = 8,
plotOutput("plot", width = "600px", height = "500px")
) #close the second box
) #close the row
) #close the dashboard body
) #close the ui
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit %>% mutate(academic_yr=as.factor(academic_yr)) %>%
filter(ethnicity != "All" & perc_fr != "NA") %>%  # filter out
filter(campus == input$x) %>%
filter(category == input$y) %>%
filter(ethnicity == input$z) %>%
ggplot(aes_string(x="academic_yr", y="perc_fr")) +
geom_point() +
geom_path(group="keep") +
labs(x="Academic Year",
y="Percentage of Applicants, Admits, or Enrollees") +
theme(axis.title.x = element_text(size=8),
axis.title.y = element_text(size=8))
})
}
shinyApp(ui, server)
UC_admit <- UC_admit %>%
mutate(`Perc FR`=as.numeric(sub("%", "", `Perc FR`))) %>%
clean_names()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(shiny)
library(shinydashboard)
library("naniar")
library("janitor")
UC_admit <- read_csv("data/UC_admit.csv")
names(UC_admit)
summary(UC_admit)
miss_var_summary(UC_admit)
UC_admit %>%
group_by(Campus) %>%
filter(FilteredCountFR!="NA") %>%
mutate(Academic_Yr=as.factor(Academic_Yr)) %>%
ggplot(aes(x=Campus, y=FilteredCountFR, fill=Ethnicity))+
facet_wrap(~Academic_Yr)+
geom_col(position="dodge", alpha=0.8)+
coord_flip()+
theme_linedraw()+
theme(plot.title=element_text(size=rel(1.75), hjus=0.5), axis.text.x = element_text(angle=50, hjust=1))+
labs(title="Admission by Ethnicity")
ui <- dashboardPage(
dashboardHeader(title = "UC Campus Admissions by Ethnicity 2010-2019"),
dashboardSidebar(disable=T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admit Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants")
), # close the first box
box(title = "UC Admissions", width = 8,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes(x=reorder(Ethnicity, FilteredCountFR), y=FilteredCountFR)) +
geom_col(color="black", fill="pink", alpha=0.75) +
theme_light(base_size = 18) +
theme(axis.text.x = element_text(angle = 50, hjust = 1))+
labs(x = "Ethnicity", y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
UC_admit <- UC_admit %>%
mutate(`Perc FR`=as.numeric(sub("%", "", `Perc FR`))) %>%
clean_names()
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions"),
dashboardSidebar(disable = TRUE),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Campus",
choices = unique(cleanUC_admit$campus),
selected = "Davis"),
selectInput("y", "Select Category",
choices = unique(cleanUC_admit$category),
selected = "Applicants"),
selectInput("z", "Select Admit Ethnicity",
choices = unique(cleanUC_admit$ethnicity),
selected = "International")
), #close the first box
box(title = "Yearly Trends", width = 8,
plotOutput("plot", width = "600px", height = "500px")
) #close the second box
) #close the row
) #close the dashboard body
) #close the ui
runApp('hw14 shiny app2.R')
UC_admit <- UC_admit %>%
mutate(`Perc FR`=as.numeric(sub("%", "", `Perc FR`))) %>%
clean_names()
View(UC_admit)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions"),
dashboardSidebar(disable = TRUE),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Campus",
choices = unique(UC_admit$campus),
selected = "Davis"),
selectInput("y", "Select Category",
choices = unique(UC_admit$category),
selected = "Applicants"),
selectInput("z", "Select Admit Ethnicity",
choices = unique(UC_admit$ethnicity),
selected = "International")
), #close the first box
box(title = "Yearly Trends", width = 8,
plotOutput("plot", width = "600px", height = "500px")
) #close the second box
) #close the row
) #close the dashboard body
) #close the ui
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit %>% mutate(academic_yr=as.factor(academic_yr)) %>%
filter(ethnicity != "All" & perc_fr != "NA") %>%  # filter out
filter(campus == input$x) %>%
filter(category == input$y) %>%
filter(ethnicity == input$z) %>%
ggplot(aes_string(x="academic_yr", y="perc_fr")) +
geom_point() +
geom_path(group="keep") +
labs(x="Academic Year",
y="Percentage of Applicants, Admits, or Enrollees") +
theme(axis.title.x = element_text(size=8),
axis.title.y = element_text(size=8))
})
}
shinyApp(ui, server)
runApp('hw14 shiny app1.R')
runApp('hw14 shiny app2.R')
runApp('hw14 shiny app2.R')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(shiny)
library(shinydashboard)
library("naniar")
library("janitor")
UC_admit <- read_csv("data/UC_admit.csv")
names(UC_admit)
summary(UC_admit)
miss_var_summary(UC_admit)
UC_admit %>%
group_by(Campus) %>%
filter(FilteredCountFR!="NA") %>%
mutate(Academic_Yr=as.factor(Academic_Yr)) %>%
ggplot(aes(x=Campus, y=FilteredCountFR, fill=Ethnicity))+
facet_wrap(~Academic_Yr)+
geom_col(position="dodge", alpha=0.8)+
coord_flip()+
theme_linedraw()+
theme(plot.title=element_text(size=rel(1.75), hjus=0.5), axis.text.x = element_text(angle=50, hjust=1))+
labs(title="Admission by Ethnicity")
ui <- dashboardPage(
dashboardHeader(title = "UC Campus Admissions by Ethnicity 2010-2019"),
dashboardSidebar(disable=T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admit Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants")
), # close the first box
box(title = "UC Admissions", width = 8,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$x & Campus==input$y & Category==input$z) %>%
ggplot(aes(x=reorder(Ethnicity, FilteredCountFR), y=FilteredCountFR)) +
geom_col(color="black", fill="pink", alpha=0.75) +
theme_light(base_size = 18) +
theme(axis.text.x = element_text(angle = 50, hjust = 1))+
labs(x = "Ethnicity", y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions"),
dashboardSidebar(disable = TRUE),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Campus",
choices = unique(UC_admit$campus),
selected = "Davis"),
selectInput("y", "Select Category",
choices = unique(UC_admit$category),
selected = "Applicants"),
selectInput("z", "Select Admit Ethnicity",
choices = unique(UC_admit$ethnicity),
selected = "International")
), #close the first box
box(title = "Yearly Trends", width = 8,
plotOutput("plot", width = "600px", height = "500px")
) #close the second box
) #close the row
) #close the dashboard body
) #close the ui
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit %>% mutate(academic_yr=as.factor(academic_yr)) %>%
filter(ethnicity != "All" & perc_fr != "NA") %>%  # filter out
filter(campus == input$x) %>%
filter(category == input$y) %>%
filter(ethnicity == input$z) %>%
ggplot(aes_string(x="academic_yr", y="perc_fr")) +
geom_point() +
geom_path(group="keep") +
labs(x="Academic Year",
y="Percentage of Applicants, Admits, or Enrollees") +
theme(axis.title.x = element_text(size=8),
axis.title.y = element_text(size=8))
})
}
shinyApp(ui, server)
library(tidyverse)
library(shiny)
library(shinydashboard)
library("naniar")
library("janitor")
UC_admit <- read_csv("data/UC_admit.csv")
names(UC_admit)
UC_admit <- UC_admit %>%
mutate(`Perc FR`=as.numeric(sub("%", "", `Perc FR`))) %>%
clean_names()
names(UC_admit)
summary(UC_admit)
miss_var_summary(UC_admit)
UC_admit %>%
group_by(campus) %>%
filter(filtered_count_fr!="NA") %>%
mutate(academic_yr=as.factor(academic_yr)) %>%
ggplot(aes(x=campus, y=filtered_count_fr, fill=ethnicity))+
facet_wrap(~academic_yr)+
geom_col(position="dodge", alpha=0.8)+
coord_flip()+
theme_linedraw()+
theme(plot.title=element_text(size=rel(1.75), hjus=0.5), axis.text.x = element_text(angle=50, hjust=1))+
labs(title="Admission by Ethnicity")
ui <- dashboardPage(
dashboardHeader(title = "UC Campus Admissions by Ethnicity 2010-2019"),
dashboardSidebar(disable=T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admit Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants")
), # close the first box
box(title = "UC Admissions", width = 8,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(academic_yr==input$x & campus==input$y & category==input$z) %>%
ggplot(aes(x=reorder(ethnicity, filtered_count_fr), y=filtered_count_fr)) +
geom_col(color="black", fill="pink", alpha=0.75) +
theme_light(base_size = 18) +
theme(axis.text.x = element_text(angle = 50, hjust = 1))+
labs(x = "Ethnicity", y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions"),
dashboardSidebar(disable = TRUE),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Campus",
choices = unique(UC_admit$campus),
selected = "Davis"),
selectInput("y", "Select Category",
choices = unique(UC_admit$category),
selected = "Applicants"),
selectInput("z", "Select Admit Ethnicity",
choices = unique(UC_admit$ethnicity),
selected = "International")
), #close the first box
box(title = "Yearly Trends", width = 8,
plotOutput("plot", width = "600px", height = "500px")
) #close the second box
) #close the row
) #close the dashboard body
) #close the ui
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit %>% mutate(academic_yr=as.factor(academic_yr)) %>%
filter(ethnicity != "All" & perc_fr != "NA") %>%  # filter out
filter(campus == input$x) %>%
filter(category == input$y) %>%
filter(ethnicity == input$z) %>%
ggplot(aes_string(x="academic_yr", y="perc_fr")) +
geom_point() +
geom_path(group="keep") +
labs(x="Academic Year",
y="Percentage of Applicants, Admits, or Enrollees") +
theme(axis.title.x = element_text(size=8),
axis.title.y = element_text(size=8))
})
}
shinyApp(ui, server)
runApp('hw14 shiny app1.R')
runApp('hw14 shiny app2.R')
View(UC_admit)
ui <- dashboardPage(
dashboardHeader(title = "UC Campus Admissions by Ethnicity 2010-2019"),
dashboardSidebar(disable=T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
radioButtons("x", "Select Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2010"),
selectInput("y", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admit Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants")
), # close the first box
box(title = "UC Admissions", width = 8,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(academic_yr==input$x & campus==input$y & category==input$z) %>%
ggplot(aes(x=reorder(ethnicity, filtered_count_fr), y=filtered_count_fr)) +
geom_col(color="black", fill="pink", alpha=0.75) +
theme_light(base_size = 18) +
theme(axis.text.x = element_text(angle = 50, hjust = 1))+
labs(x = "Ethnicity", y = "Number")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
View(UC_admit)
UC_admit %>%
mutate(academic_yr=as.factor(academic_yr)) %>>%
filter(campus=="Berkeley") %>%
filter(category=="Enrollees") %>%
filter(ethnicity=="Asian") %>%
ggplot(aes(x=academic_yr, y=perc_fr)) +
geom_point(color="pink") +
geom_path(group="keep") +
labs(title="Admissions by Year for UC Campuses",
x="Academic Year",
y="% Enrollees") +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size=8),
axis.title.y = element_text(size=8))
UC_admit %>%
mutate(academic_yr=as.factor(academic_yr)) %>%
filter(campus=="Berkeley") %>%
filter(category=="Enrollees") %>%
filter(ethnicity=="Asian") %>%
ggplot(aes(x=academic_yr, y=perc_fr)) +
geom_point(color="pink") +
geom_path(group="keep") +
labs(title="Admissions by Year for UC Campuses",
x="Academic Year",
y="% Enrollees") +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size=8),
axis.title.y = element_text(size=8))
