library("tidyverse")
library("janitor")
library("naniar")
global_sharks <- read_csv("data/global-shark-attack.csv") %>% clean_names()
summary(global_sharks)
miss_var_summary(global_sharks)
View(global_sharks)
global_sharks %>%
count(country) %>%
arrange(desc(n))
sharks %>%
group_by(country) %>%
summarise(n = n()) %>%
ggplot(aes(x=reorder(country, n), y=n)) +
geom_col(fill = "#0099f9", alpha=0.8)+
labs(title="Total Number of Shark Incidents by Country",
x=NULL,
y="n") +
theme(axis.text.x = element_text(angle = 60, hjust = 1),
plot.title = element_text(size = 14, face="bold"))+
geom_text(aes(label = n), vjust = -0.2, size = 3, color = "black")
global_sharks %>%
group_by(country) %>%
summarise(n = n()) %>%
ggplot(aes(x=reorder(country, n), y=n)) +
geom_col(fill = "#0099f9", alpha=0.8)+
labs(title="Total Number of Shark Incidents by Country",
x=NULL,
y="n") +
theme(axis.text.x = element_text(angle = 60, hjust = 1),
plot.title = element_text(size = 14, face="bold"))+
geom_text(aes(label = n), vjust = -0.2, size = 3, color = "black")
global_sharks %>%
group_by(country) %>%
summarise(n = n(10)) %>%
ggplot(aes(x=reorder(country, n), y=n)) +
geom_col(fill = "#0099f9", alpha=0.8)+
labs(title="Total Number of Shark Incidents by Country",
x=NULL,
y="n") +
theme(axis.text.x = element_text(angle = 60, hjust = 1),
plot.title = element_text(size = 14, face="bold"))+
geom_text(aes(label = n), vjust = -0.2, size = 3, color = "black")
global_sharks %>%
count(country) %>%
head(n=10)
global_sharks %>%
count(country) %>%
arrange(desc(n)) %>%
head(n=10)
global_sharks %>%
count(country) %>%
arrange(desc(n)) %>%
head(n=10) %>%
ggplot(aes(x=reorder(country, n), y=n)) +
geom_col(fill = "#0099f9", alpha=0.8)+
labs(title="Total Number of Shark Incidents by Country",
x=NULL,
y="n") +
theme(axis.text.x = element_text(angle = 60, hjust = 1),
plot.title = element_text(size = 14, face="bold"))+
geom_text(aes(label = n), vjust = -0.2, size = 3, color = "black")
global_sharks %>%
group_by(month) %>%
summarise(total=n(), .groups='keep') %>%
ggplot(aes(x=as_factor(month), y=total))+
geom_col(fill = "#0099f9", alpha=0.8)+
labs(title="Number of Shark Incidents by Month",
x="Month",
y="n")+
theme(plot.title = element_text(size = 14, face="bold"))
global_sharks %>%
separate(date, into= c("year", "month", "day"), sep = "-")
global_sharks %>%
separate(date, into= c("year", "month", "day"), sep = "-") %>%
group_by(month) %>%
summarise(total=n(), .groups='keep') %>%
ggplot(aes(x=as_factor(month), y=total))+
geom_col(fill = "#0099f9", alpha=0.8)+
labs(title="Number of Shark Incidents by Month",
x="Month",
y="n")+
theme(plot.title = element_text(size = 14, face="bold"))
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
install.packages("shiny")
library(shiny)
library("tidyverse")
library("palmerpenguins")
runApp("plot_iris.R")
library(shiny)
ui <- fluidPage(
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"), selected = "bill_length_mm")
)
server <- function(input, output) {
}
shinyApp(ui, server)
global_sharks %>%
count(activity) %>%
arrange(desc(n))
global_sharks %>%
count(activity, na.rm = T) %>%
arrange(desc(n))
global_sharks %>%
filter(activity != "NA") %>%
count(activity) %>%
arrange(desc(n))
global_sharks %>%
separate(date, into= c("year", "month", "day"), sep = "-") %>%
filter(month != "NA") %>%
group_by(month) %>%
summarise(total=n(), .groups='keep') %>%
ggplot(aes(x=as_factor(month), y=total))+
geom_col(fill = "#0099f9", alpha=0.8)+
labs(title="Number of Shark Incidents by Month",
x="Month",
y="n")+
theme(plot.title = element_text(size = 14, face="bold"))
global_sharks %>%
filter(activity == "Surfing" & "Swimming" & "Fishing" & "Spearfishing" & "Wading") %>%
ggplot(aes(x=injury, fill=injury))+
geom_bar(alpha=0.8, position="dodge")+
facet_wrap(~mode)+
labs(title="Injury Type by Activity",
x=NULL,
y="Number of Incidents")+
theme(strip.text = element_text(size=10),
axis.text.x = element_text(size=8, angle = 60, hjust = 1))
global_sharks %>%
filter(activity = "Surfing" & "Swimming" & "Fishing" & "Spearfishing" & "Wading") %>%
ggplot(aes(x=injury, fill=injury))+
geom_bar(alpha=0.8, position="dodge")+
facet_wrap(~mode)+
labs(title="Injury Type by Activity",
x=NULL,
y="Number of Incidents")+
theme(strip.text = element_text(size=10),
axis.text.x = element_text(size=8, angle = 60, hjust = 1))
global_sharks %>%
filter(activity != "NA") %>%
count(activity) %>%
arrange(desc(n))
head(n=5) %>%
ggplot(aes(x=injury, fill=injury))+
geom_bar(alpha=0.8, position="dodge")+
facet_wrap(~mode)+
labs(title="Injury Type by Activity",
x=NULL,
y="Number of Incidents")+
theme(strip.text = element_text(size=10),
axis.text.x = element_text(size=8, angle = 60, hjust = 1))
global_sharks %>%
filter(activity != "NA") %>%
count(activity) %>%
arrange(desc(n))
head(n=5) %>%
ggplot(aes(x=injury, fill=injury))+
geom_bar(alpha=0.8, position="dodge")+
facet_wrap(~activity)+
labs(title="Injury Type by Activity",
x=NULL,
y="Number of Incidents")+
theme(strip.text = element_text(size=10),
axis.text.x = element_text(size=8, angle = 60, hjust = 1))
global_sharks %>%
filter(activity != "NA") %>%
count(activity) %>%
arrange(desc(n)) %>%
head(n=5) %>%
ggplot(aes(x=injury, fill=injury))+
geom_bar(alpha=0.8, position="dodge")+
facet_wrap(~activity)+
labs(title="Injury Type by Activity",
x=NULL,
y="Number of Incidents")+
theme(strip.text = element_text(size=10),
axis.text.x = element_text(size=8, angle = 60, hjust = 1))
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
plotOutput("plot", width="500px", height="400px") # providing size/aspect of visual
)
server <- function(input, output) {
output$plot <- renderPlot({
ggplot(data=penguins, aes_string(x=input$x, y=input$y, color="species"))+
geom_point()+
theme_light(base_size = 18)
})
}
shinyApp(ui, server)
global_sharks %>%
filter(activity != "NA") %>%
ggplot(aes(x=injury, fill=injury))+
geom_bar(alpha=0.8, position="dodge")+
facet_wrap(~activity)+
labs(title="Injury Type by Activity",
x=NULL,
y="Number of Incidents")+
theme(strip.text = element_text(size=10),
axis.text.x = element_text(size=8, angle = 60, hjust = 1))
global_sharks %>%
filter(sex != "NA") %>%
group_by(sex)
global_sharks %>%
filter(sex != "NA") %>%
group_by(sex) %>%
count(sex)
homerange <- read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
names(homerange)
homerange %>%
ggplot(aes(x=locomotion, fill=trophic.guild))+
geom_bar(position="dodge")
homerange %>%
ggplot(aes(x=locomotion, fill=thermoregulation))+
geom_bar(position="dodge")
library(shiny)
library(shiny)
ui <- fluidPage(
radioButtons("x", "Select Fill Variable", choices=c("trophic.guild", "thermoregulation"),
selected = "trophic.guild"),
plotOutput("plot")
)
server <- function(input, output, session) {
output$plot <- renderPlot((
ggplot(data=homerange, aes_string(x="locomotion", fill=input$x))+
geom_bar(position="dodge", alpha=0.8, color = "black")+
labs(x=NULL, fill = "Fill Variable")
))
}
library(shiny)
ui <- fluidPage(
radioButtons("x", "Select Fill Variable", choices=c("trophic.guild", "thermoregulation"),
selected = "trophic.guild"),
plotOutput("plot")
)
server <- function(input, output, session) {
output$plot <- renderPlot((
ggplot(data=homerange, aes_string(x="locomotion", fill=input$x))+
geom_bar(position="dodge", alpha=0.8, color = "black")+
labs(x=NULL, fill = "Fill Variable")
))
}
shinyApp(ui, server)
install.packages("shinydashboard")
library(shiny)
ui <- fluidPage(
radioButtons("x", "Select Fill Variable", choices=c("trophic.guild", "thermoregulation"),
selected = "trophic.guild"),
plotOutput("plot")
)
server <- function(input, output, session) {
output$plot <- renderPlot((
ggplot(data=homerange, aes_string(x="locomotion", fill=input$x))+
geom_bar(position="dodge", alpha=0.8, color = "black")+
labs(x=NULL, fill = "Fill Variable")
))
}
shinyApp(ui, server)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(tidyverse)
library(shiny)
library(shinydashboard)
require(janitor)
library(palmerpenguins)
homerange <- readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
ui <- fluidPage(titlePanel("Homerange Locomotion"),
radioButtons("x", "Select Fill Variable", choices=c("trophic.guild", "thermoregulation"), selected="trophic.guild"),
plotOutput("plot", width="600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(homerange, aes_string(x="locomotion", fill=input$x)) +
geom_bar(position="dodge", alpha=0.8, color="black") +
theme_light(base_size=18) +
labs(x=NULL, y=NULL, fill="Fill Variable")
})
}
shinyApp(ui, server)
homerange <- readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
shinyApp(ui, server)
homerange %>%
filter(taxon=="mammals") %>%
ggplot(aes(x=log10.hra))+
geom_density(fill="steelblue", color="black", alpha=0.6)
library(shiny)
ui <- fluidPage(titlePanel("Log 10 Homerange by Taxon"),
selectInput("x", "select Taxon",
choices=c("birds", "lake fishes", "lizards", "mammals", "marine fishes", "river fishes", "snakes", "tortoises", "turtles"), selected="birds"),
plotOutput("plot", width = "600px", height="500px")
)
server <- function(input, output,session) {
output$plot <-renderPlot({
homerange%>%
filter(taxon=input$x) %>%
ggplot(aex(x=log10.hra))+
geom_density(fill-"steelblue", color="black", alpha=0.8)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Log 10 Homerange by Taxon"), # add title to app
selectInput("x", "select Taxon",
choices=c("birds", "lake fishes", "lizards", "mammals", "marine fishes", "river fishes", "snakes", "tortoises", "turtles"), selected="birds"),
plotOutput("plot", width = "600px", height="500px")
)
server <- function(input, output,session) {
output$plot <-renderPlot({
homerange%>%
filter(taxon=input$x) %>%
ggplot(aex(x=log10.hra))+
geom_density(fill-"steelblue", color="black", alpha=0.8)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Log 10 Homerange by Taxon"), # add title to app
selectInput("x", "select Taxon",
choices=c("birds", "lake fishes", "lizards", "mammals", "marine fishes", "river fishes", "snakes", "tortoises", "turtles"), selected="birds"),
plotOutput("plot", width = "600px", height="500px")
)
server <- function(input, output,session) {
output$plot <-renderPlot({
homerange%>%
filter(taxon==input$x) %>%
ggplot(aex(x=log10.hra))+
geom_density(fill-"steelblue", color="black", alpha=0.8)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Log 10 Homerange by Taxon"), # add title to app
selectInput("x", "select Taxon",
choices=c("birds", "lake fishes", "lizards", "mammals", "marine fishes", "river fishes", "snakes", "tortoises", "turtles"), selected="birds"),
plotOutput("plot", width = "600px", height="500px")
)
server <- function(input, output,session) {
output$plot <-renderPlot({
homerange%>%
filter(taxon==input$x) %>%
ggplot(aes(x=log10.hra))+
geom_density(fill-"steelblue", color="black", alpha=0.8)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Log 10 Homerange by Taxon"), # add title to app
selectInput("x", "select Taxon",
choices=c("birds", "lake fishes", "lizards", "mammals", "marine fishes", "river fishes", "snakes", "tortoises", "turtles"), selected="birds"),
plotOutput("plot", width = "600px", height="500px")
)
server <- function(input, output,session) {
output$plot <-renderPlot({
homerange %>%
filter(taxon==input$x) %>%
ggplot(aes(x=log10.hra))+
geom_density(fill-"steelblue", color="black", alpha=0.8)
})
}
shinyApp(ui, server)
ui <- fluidPage(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"),
selected = "bill_depth_mm"),
sliderInput("pointsize", "Select the Point Size", min = 0.5, max = 3, value = 1, step = 0.5),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
ggplot(penguins, aes_string(x = input$x, y = input$y, color="species")) +
geom_point(size=input$pointsize) +
theme_light()
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(),
dashboardBody()
)
server <- function(input, output) { }
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title="Penguins"),
dashboardSidebar(disable=T),
dashboardBody()
)
ui <- dashboardPage(
dashboardHeader(title = "Penguins"),
dashboardSidebar(disable=T),
dashboardBody(
fluidRow(
box(
selectInput("x", "Select X Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"), selected = "bill_length_mm"),
selectInput("y", "Select Y Variable", choices = c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"), selected = "bill_depth_mm"),
), # close the first box
box(
plotOutput("plot", width = "500px", height = "400px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
session$onSessionEnded(stopApp) #automatically stop the app when we close it
output$plot <- renderPlot({
ggplot(data=penguins, aes_string(x = input$x, y = input$y, color="species")) +
geom_point() +
theme_light()
})
}
shinyApp(ui, server)
wolves <- read_csv("data/wolves_data/wolves_dataset.csv")
wolves %>%
filter(sex!="NA") %>%
ggplot(aes(x=sex, fill=sex))+
geom_bar()+
facet_wrap(~pop)
ui <- fluidPage(
#shinythemes::themeSelector(),  # <--- Add this somewhere in the UI
theme = shinytheme("cerulean"),
titlePanel("Log 10 Homerange by Taxon"), # give the page a title
# generate a row with a sidebar
sidebarLayout(
# define the sidebar with one input
sidebarPanel(
selectInput("taxon", " Select Taxon of Interest:", choices=unique(homerange$taxon)), hr(),
helpText("Reference: Tamburello N, Cote IM, Dulvy NK (2015) Energy and the scaling of animal space use. The American Naturalist 186(2):196-211.")),
# create a spot for the barplot
mainPanel(
plotOutput("taxonPlot"))
)
)
ui <- fluidPage(
shinythemes::themeSelector(),  # <--- Add this somewhere in the UI
theme = shinytheme("cerulean"),
titlePanel("Log 10 Homerange by Taxon"), # give the page a title
# generate a row with a sidebar
sidebarLayout(
# define the sidebar with one input
sidebarPanel(
selectInput("taxon", " Select Taxon of Interest:", choices=unique(homerange$taxon)), hr(),
helpText("Reference: Tamburello N, Cote IM, Dulvy NK (2015) Energy and the scaling of animal space use. The American Naturalist 186(2):196-211.")),
# create a spot for the barplot
mainPanel(
plotOutput("taxonPlot"))
)
)
