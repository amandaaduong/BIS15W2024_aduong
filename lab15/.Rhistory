knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(dplyr)
library(shiny)
library(shinydashboard)
#load the Netflix Data in your Data folder, save it under the object name netflix
netflix <- read_csv("Data/netflix_titles.csv")
netflix_movies <- filter(netflix, type == "Movie")
count(netflix_movies, director, sort = T)
netflix_movies <- netflix_movies %>%
separate_rows(director, sep = ", ") %>%
filter(!is.na(director)) %>%
count(director, sort = TRUE)
netflix_movies <- netflix_movies %>%
separate_rows(director, sep = ", ") %>%
filter(!is.na(director)) %>%
count(director, sort = TRUE)
netflix_movies
top_directors <- head(netflix_movies, 10)  # Adjust 10 to the desired number of top directors
# Creating a bar plot
ggplot(top_directors, aes(x = reorder(director, n), y = n)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Top Directors on Netflix", x = "Director", y = "Number of Movies") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
netflix_movies %>%
separate_rows(director, sep = ", ") %>%
filter(!is.na(director)) %>%
count(director, sort = TRUE)
netflix_movies
netflix_movies <- filter(netflix, type == "Movie")
count(netflix_movies, director, sort = T)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(dplyr)
blood_count <- read_csv("data/blood_count.csv")
blood_count <- read_csv("data/blood_count_dataset.csv")
glimpse(blood_count)
blood_count %>%
group_by(gender) %>%
summarize(min=min(red_blood_cells),
mean=mean(red_blood_cells),
max=max(red_blood_cells))
View(blood_count)
blood_count <- read_csv("data/blood_count_dataset.csv") %>% clean_data()
blood_count <- read_csv("data/blood_count_dataset.csv") %>% clean_data()
library(tidyverse)
library(janitor)
library(dplyr)
blood_count <- read_csv("data/blood_count_dataset.csv") %>% clean_data()
install.package("janitor")
install.packages("janitor")
install.packages("janitor")
install.packages("janitor")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(dplyr)
blood_count <- read_csv("data/blood_count_dataset.csv") %>% clean_data()
blood_count <- read_csv("data/blood_count_dataset.csv") %>% clean_names()
glimpse(blood_count)
blood_count %>%
group_by(gender) %>%
summarize(min=min(red_blood_cells),
mean=mean(red_blood_cells),
max=max(red_blood_cells))
options(scipen = 999, digits = 2)
blood_count %>%
filter(Gender = "male") %>%
select[3:9] %>%
colMeans(na.rm = TRUE)
options(scipen = 999, digits = 2)
blood_count %>%
filter(gender = "male") %>%
select[3:9] %>%
colMeans(na.rm = TRUE)
options(scipen = 999, digits = 2)
blood_count %>%
filter(gender == "male") %>%
select[3:9] %>%
colMeans(na.rm = TRUE)
options(scipen = 999, digits = 2)
blood_count %>%
filter(gender == "male") %>%
select(3:9) %>%
summarise_all(mean, na.rm = TRUE)
options(scipen = 999, digits = 2)
blood_count %>%
filter(Gender == "Female") %>%
select(3:9) %>%
summarise_all(mean, na.rm = TRUE)
options(scipen = 999, digits = 2)
blood_count %>%
filter(gender == "Female") %>%
select(3:9) %>%
summarise_all(mean, na.rm = TRUE)
blood_count %>%
pivot_wider(names_from = Test, values_from = Values) %>%
ggplot(aes(x = Gender, y = Values, fill = Gender)) +
geom_boxplot() +
facet_wrap(~ Test, scales = "free") +
labs(title = "Boxplot of Blood Count Tests",
x = "Test",
y = "Values")
blood_count %>%
pivot_wider(names_from = test, values_from = values) %>%
ggplot(aes(x = gender, y = values, fill = gender)) +
geom_boxplot() +
facet_wrap(~ test, scales = "free") +
labs(title = "Boxplot of Blood Count Tests",
x = "Test",
y = "Values")
View(blood_count)
options(scipen = 999, digits = 2)
blood_count %>%
filter(gender == "Male") %>%
select(3:9) %>%
summarise_all(mean, na.rm = TRUE)
blood_count %>%
pivot_longer(cols = 3:9, names_to = "Test", values_to = "Values") %>% #removed brackets
ggplot(aes(x = gender, y = Values, fill = gender)) + #lower case "g"
geom_boxplot() +
facet_wrap(~ Test, scales = "free")+ #Added "wrap"
labs(title = "Boxplot of Blood Count Tests",
x = "Test",
y = "Values")
grouped_bc <- blood_count %>%
mutate(Age_Group = case_when( # fixed spelling of age and added mutate function
age >= 20 & age <= 29 ~ "20s",
age >= 30 & age <= 39 ~ "30s",
age >= 40 & age <= 49 ~ "40s",
age >= 50 & age <= 59 ~ "50s",
age >= 60 & age <= 70 ~ "60s")) # there were only 4 people in 70s, so I combined it with 60s
head(grouped_bc)
